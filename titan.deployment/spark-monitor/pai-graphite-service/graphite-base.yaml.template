apiVersion: v1
kind: Service
metadata:
  name: graphite-carbon
spec:
  ports:
  - port: 2003
    targetPort: 2003
    name: graphite-carbon
    protocal: TCP
  selector:
    app: graphite-base
---
apiVersion: v1
kind: Service
metadata:
  name: graphite-web
  labels:
    app: graphite-base
spec:
  type: NodePort
  ports:
  - port: 80
    name: graphite-web
    nodePort: 30890
    protocal: TCP
  selector:
    app: graphite-base
---
apiVersion: v1
kind: Service
metadata:
  name: graphite-base
  labels:
    app: graphite-base
spec:
  ports:
  - port: 80
    name: graphite-web
  - port: 2003
    name: graphite-carbon
  clusterIP: None
  selector:
    app: graphite-base
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: graphite-base
spec:
  serviceName: "graphite-base"
  replicas: 1
  template:
    metadata:
      labels:
        app: graphite-base
    spec:
      # Use hostNetwork so datanodes connect to namenode without going through an overlay network
      # like weave. Otherwise, namenode fails to see physical IP address of datanodes.
      hostNetwork: true
      hostPID: true
      containers:
        - name: graphite-base
          image: shraonraining/graphite
          env:
            - name: GRAPHITE_CONF_hostname
              value: {{ clusterinfo[ 'hadoopinfo' ][ 'hadoop_master_hostname' ] }}
          ports:
          - containerPort: 2003
            name: graphite-carbon
          - containerPort: 80
            name: graphite-web
      nodeSelector:
        graphiterole: master
